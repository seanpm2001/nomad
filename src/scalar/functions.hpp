#ifndef nomad__src__scalar__functions_hpp
#define nomad__src__scalar__functions_hpp

#include <src/scalar/functions/smooth_functions/acos.hpp>
#include <src/scalar/functions/smooth_functions/acosh.hpp>
#include <src/scalar/functions/smooth_functions/asin.hpp>
#include <src/scalar/functions/smooth_functions/asinh.hpp>
#include <src/scalar/functions/smooth_functions/atan.hpp>
#include <src/scalar/functions/smooth_functions/atan2.hpp>
#include <src/scalar/functions/smooth_functions/atanh.hpp>
#include <src/scalar/functions/smooth_functions/binary_prod_cubes.hpp>
#include <src/scalar/functions/smooth_functions/cos.hpp>
#include <src/scalar/functions/smooth_functions/cosh.hpp>
#include <src/scalar/functions/smooth_functions/erf.hpp>
#include <src/scalar/functions/smooth_functions/erfc.hpp>
#include <src/scalar/functions/smooth_functions/exp.hpp>
#include <src/scalar/functions/smooth_functions/exp2.hpp>
#include <src/scalar/functions/smooth_functions/expm1.hpp>
#include <src/scalar/functions/smooth_functions/fma.hpp>
#include <src/scalar/functions/smooth_functions/hypot.hpp>
#include <src/scalar/functions/smooth_functions/inv_cloglog.hpp>
#include <src/scalar/functions/smooth_functions/inv_logit.hpp>
#include <src/scalar/functions/smooth_functions/inv_sqrt.hpp>
#include <src/scalar/functions/smooth_functions/inv_square.hpp>
#include <src/scalar/functions/smooth_functions/inv.hpp>
#include <src/scalar/functions/smooth_functions/lgamma.hpp>
#include <src/scalar/functions/smooth_functions/log_diff_exp.hpp>
#include <src/scalar/functions/smooth_functions/log_sum_exp.hpp>
#include <src/scalar/functions/smooth_functions/log.hpp>
#include <src/scalar/functions/smooth_functions/log1p_exp.hpp>
#include <src/scalar/functions/smooth_functions/log1p.hpp>
#include <src/scalar/functions/smooth_functions/log2.hpp>
#include <src/scalar/functions/smooth_functions/log10.hpp>
#include <src/scalar/functions/smooth_functions/multiply_log.hpp>
#include <src/scalar/functions/smooth_functions/pow.hpp>
#include <src/scalar/functions/smooth_functions/Phi.hpp>
#include <src/scalar/functions/smooth_functions/sin.hpp>
#include <src/scalar/functions/smooth_functions/sinh.hpp>
#include <src/scalar/functions/smooth_functions/sqrt.hpp>
#include <src/scalar/functions/smooth_functions/square.hpp>
#include <src/scalar/functions/smooth_functions/tan.hpp>
#include <src/scalar/functions/smooth_functions/tanh.hpp>
#include <src/scalar/functions/smooth_functions/tgamma.hpp>
#include <src/scalar/functions/smooth_functions/trinary_prod_cubes.hpp>

#include <src/scalar/functions/nonsmooth_functions/cbrt.hpp>
#include <src/scalar/functions/nonsmooth_functions/ceil.hpp>
#include <src/scalar/functions/nonsmooth_functions/fabs.hpp>
#include <src/scalar/functions/nonsmooth_functions/fdim.hpp>
#include <src/scalar/functions/nonsmooth_functions/floor.hpp>
#include <src/scalar/functions/nonsmooth_functions/fmax.hpp>
#include <src/scalar/functions/nonsmooth_functions/fmin.hpp>
#include <src/scalar/functions/nonsmooth_functions/fmod.hpp>
#include <src/scalar/functions/nonsmooth_functions/if_else.hpp>
#include <src/scalar/functions/nonsmooth_functions/round.hpp>
#include <src/scalar/functions/nonsmooth_functions/trunc.hpp>

#endif
